g
for(i in 1: n){lines(c(x[i],x[i]),c(e[i],0),col="red",lwd=2)}
x<-runif(100,-3,3)
y<-sin(x)+x+rnorm(100,sd=.2)
g=ggplot(data.frame(x=x,y=y),aes(x=x,y=y))
g=g+geom_smooth(method="lm",colour="black")
g=g+geom_point(size=7,colour="black",alpha=0.4)
g=g+geom_point(size=5,colour="red",alpha=0.4)
g
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit<-lm(y~x)
fit
residuals(fit)
resid(fit)
e<-resid(fit)
sum(e^2)/length(e)
sum(e^2)/(length(e)-2)
sqrt(sum(e^2)/(length(e)-2))
predict(fit)
sd(fit)
sqrt((y-predict(fit))^2/length(y))
sqrt(sum((y-predict(fit))^2/length(y)))
data("mtcars")
fit<-lm(mtcars$mpg~mtcars$wt)
fit$coefficients
fit$effects
fit
fit$residuals
sd(fit)
?sd
summary(fit)$cofficients
summary(firt)
summary(fit)
summary(fit)$Coefficients
summary(fit)$coddicients
summary(fit)$coefficients
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y~x)
fit<-lm(y~x)
summary(fit)$coefficients
fit<-lm(mtcars$mpg~mtcars$wt)
summary(fit)$coefficients
qt(.95,df=fit$df)
q<-qt(.95,df=fit$df)
-5.344472+c(-1,1)*q*0.559101
-5.344472+c(-1,1)*q*0.559101/10
?mtcars
mean(mtcars$wt)
v<-mean(mtcars$wt)
predict(fit,newdata = v,interval = ("confidence"))
file.create("american.csv")
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ",destfile="./")
?download.file
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ",destfile="./",mode = "curl")
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ",destfile="./american.csv",mode = "curl")
library("american.csv")
a<-read.csv("american.csv")
head(a)
a[which(a$ACR==3&a$AGS==6),]
head(a[which(a$ACR==3&a$AGS==6),],3)
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg ",destfile = "fje.jpg",mode="curl")
j<-jpeg(filename = "fje.jpg")
j
read.csv("fje.jpg")
library(jpeg)
install.packages("jpeg")
library(jpeg)
??jpeg
readJPEG("fje.jpg",native = TRUE)
j<-readJPEG("fje.jpg",native = TRUE)
j[c(30,80),]
quantile(j)
quantile(j,c(0.3,0.8))
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",destfile = "FGDP.csv",method = "curl")
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv ",destfile = "country.csv",method = "curl")
c<-read.csv("country.csv")
f<-read.csv("FGDP.csv")
head(f)
head(c)
names(c)
c[c(1:10),1]
f
head(f)
names(f)
names(c)
names(f)
head(f)
f<-read.csv("FGDP.csv",header = TRUE)
head(f)
m<-merge(f,c,by.x="X",by.y = "CountryCode",all=TRUE)
names(m)
head(m)
m(c(1:20),1)
m[c(1:20),1]
m[c(1:40),1]
m[c(1:50),1]
m[c(1:10000),1]
names(m)
length(m[!is.na[m[,1]],])
length(m[!is.na[m$Gross.domestic.product.2012,])
length(m[!is.na[m$Gross.domestic.product.2012,]])
length(m[!is.na(m$Gross.domestic.product.2012),])
length(m[!is.na(m$X),])
library(dplyr)
library("dplyr")
install.packages("dplyr")
library("dplyr")
c[,1]
a<-c[,1]
s<-select(f,(X:a))
length(s)
sapply(a,function(x){select(f,(X:x))})
sapply(a,function(x){select(f,(X:x))})
sapply(a,function(s){select(f,(X:s))})
a[2]
unlist(a)
class(a)
a<-unclass(a)
class(a)
sapply(a,function(s){select(f,(X:s))})
sapply(a,function(s){select(f,(X:s);})
sapply(a,function(s){select(f,(X:s))})
sapply(a,function(s){select(f,(X:s[1]))})
apply(a,function(s){select(f,(X:s))})
sapply(a,FUN = function(x){select(f,(X:x))}
)
)
select(f,(X:a[1]))
a[1]
a[2]
a[3]
a[4]
a
a<-c[,1]
a
select(f,(X:a[1]))
a
a[1]
a<-as.character(a)
a
select(f,(X:a[1]))
a[1]
class(f$X)
f[f$X==c$CountryCode,]
m
class(a)
x<-as.charactor(f$X)
x<-as.character(f$X)
a
x
sapply(a,function(x){select(x)})
names(x)
names(x)<-"val"
names(x)
x<-as.charactor(f$X)
x<-as.character(f$X)
x<-c(val=x)
x
x<-as.character(f$X)
x
class(x)
as.list(x)
as.array(x)
x<-data.frame(val=x)
x
sapply(a,function(x){select(x$val:x)})
sapply(a,function(x){select(val:x)})
sapply(a,function(x){select(x,(val:x))})
names(f)
names(c)
?merge
m<-merge(f,c,by.x="X",by.y = "CountryCode",all=FALSE)
m
head(m)
length(m)
nrow(m)
m[!is.na(m$X),]
m[!is.na(m$Gross.domestic.product.2012),]
nrow(m[!is.na(m$X),])
arrange(m,desc(m$Gross.domestic.product.2012))
arrange(m,desc(Gross.domestic.product.2012))
m[13,]
m<-arrange(m,desc(Gross.domestic.product.2012))
m[13,1]
c[c$CountryCode=="SRB",]
length(c)
length(c)
nrow(c)
m[,1]
merge(f,c,by.x = "X",by.y = "CountryCode")
merge(f,c,by.x = "X",by.y = "CountryCode",all=TRUE)
m1<-merge(f,c,by.x = "X",by.y = "CountryCode",all=TRUE)
nrow(m1)
m1<-merge(f,c,by.x = "X",by.y = "CountryCode",all.x=FALSE)
nrow(m1)
m1[order(m1$Gross.domestic.product.2012)]
m1[order(m1$Gross.domestic.product.2012),1]
c[,1]
f[,1]
f1<-f[!is.na(f$X),1]
nrow(f1)
length(f1)
f1
f1<-f[!(f$X=="") ,1]
length(f1)
f1
f1<-f[!(f$X=="") ,]
arrange(f1,desc(Gross.domestic.product.2012))
f1
f1
f1<-f[!(f$X=="") ,]
f1
length(f1)
nrow(f1)
f1<-f[!(f$X=="") ,1]
f1
f1<-f[!(f$X=="") ,]
arrange(f1,desc(Gross.domestic.product.2012))
f1<-arrange(f1,desc(Gross.domestic.product.2012))
f1[,1]
c
f1[f1$X %in% c$CountryCode,]
f1<-f1[f1$X %in% c$CountryCode,]
length(f1)
nrow(f1)
f1[13,]
f1[,1]
c[c$CountryCode=="KEN",]
?match()
match(1:10,7:20)
match(c$CountryCode,f$X)
mm<-match(c$CountryCode,f$X)
sum(!is.na(mm))
?f
??f
str(f)
summary(f)
names(f)
f<-read.csv("FGDP.csv")
f
head(f)
f<-read.csv("FGDP.csv",header = TRUE)
f
head(f)
f<-read.csv("FGDP.csv",header = TRUE,quote = " ")
f<-read.table("FGDP.csv",header = TRUE)
f<-read.csv("FGDP.csv",header = TRUE)
f
f<-read.csv("FGDP.csv",header = TRUE)
f
f<-read.csv("FGDP.csv")
f
f<-read.csv("FGDP.csv")
f
f
names(f)
head(f)
f<-read.csv("FGDP.csv")
names(f)
head(f)
merge(f,c,by.x = "ID",by.y = "CountryCode")
merge(f,c,by.x = "ID",by.y = "CountryCode",all=FALSE)
merge(f,c,by.x = "ID",by.y = "CountryCode",all=TRUE)
merge(f,c,by.x = "ID",by.y = "CountryCode",all=FALSE)
length(f)
nrow(f)
arrange(f,desc(Ranking))
arrange(f,desc(Ranking))[,1]
m<-merge(f,c,by.x = "ID",by.y = "CountryCode",all=FALSE)
arrange(m,desc(Ranking))[,1]
names(m)
m[,9]
m[,6]
select(m,(Income.Group:"High income: nonOECD"))
mb<-gropu_by(m,Income.Group)
mb<-group_by(m,Income.Group)
mean(mb[,1])
as.numeric(mb[,1])
unclass(nb[,1])
unclass(mb[,1])
View(mb)
View(mb)
mean(mb[,2])
mean(mb[,2],na.rm = TRUE)
mean(m[,2])
mean(m[!is.na(m$Ranking),2])
class(m$Ranking)
as.numeric(m$Ranking)
m[,2]
mb[,2]
arrange(mb,desc(Ranking))
md<-arrange(mb,desc(Ranking))
md[,2]
head(md)
f
head(f)
fa<-arrange(f,desc(Ranking))
head(fa)
fa[11,]
fa[13,]
head(f,11:20)
head(f,20)
tail(fa)
fa<-fa[!(fa$Ranking==""),]
head(fa)
tail(fa)
fa<-fa[!(fa$ID==""),]
head(fa)
head(fa,13)
head(fa,17)
head(fa,25)
tail(fa)
tail(fa,15)
nrow(fa)
merge(fa,c,by.x = "ID",by.y = "CountryCode",all = FALSE)
mm<-merge(fa,c,by.x = "ID",by.y = "CountryCode",all = FALSE)
head(mm)
names(mm)
mm[,1]
mm[,2]
mm<-arrange(mm,desc(Ranking))
mm[,2]
mm[,1]
mm<-arrange(mm,desc(Ranking))
mm[,2]
mm[,6]
mm[,9]
mm[,2]
mm[,1]
mm[13,34]
nrow(mm)
mm<-arrange(mm,Ranking)
mm[,2]
as.numeric(mm[,2])
?arrange()
?desc
as.numeric(mm[1,2])
as.numeric(mm[2,2])
as.character(mm[,2])
as.numeric(as.character(mm[,2]))
desc(as.numeric(as.character(mm[,2])))
order(as.numeric(as.character(mm[,2])))
desc(1:10)
desc(1:100)
desc(c(2,5,4,12))
mm<-arrange(mm,desc(mm$Ranking))
desc(mm$Ranking)
mm<-arrange(mm,desc(Ranking))
mm[,2]
mm[mm$Ranking==178,2]
mm[mm$Ranking==178,1]
names(mm)
mm[mm$Ranking==178,34]
mm<-group_by(mm,Income.Group)
mm[,6]
summarise(mm,GDP=mean(Ranking))
summarise(mm,GDP=mean(Ranking,na.rm = TRUE))
mm[,2]<-as.numeric(as.character(mm[,2]))
mm[,2]
mm<-merge(fa,c,by.x = "ID",by.y = "CountryCode",all = FALSE)
mm<-group_by(mm,Income.Group)
mmm<-mm
as.numeric(as.character(mm[,2]))
as.character(mm[,2])
as.character(mm[[,2]])
as.character(mm[,[2])
as.character(mm[,[2]])
as.character(mm[,2])
as.numeric(mm[,2])
mm[,2]
nrow(mm)
mean(mm[,2])
r<-mm[,2]
r
unclass(r)
r<-unclass(r)
r
mean(r)
as.numeric(r)
as.character(r)
unlist
unlist(r)
mean(r)
r<-mm[,2]
as.vector(r)
mean(r)
as.numeric(r[])
as.numeric(r[1:10])
as.character(r[1:10])
r<-mm[,2]
factor(r)
list(r)
r[1]
r[[1]]
r<-r[[1]]
r
r[1]
r[1]+r[2]
as.numeric(r)
r[1]+r[2]
r<-as.numeric(r)
r[1]+r[2]
nm<-data.frame(Ranking=r,Incoming=mm$Income.Group)
summarise(nm,arank=mean(Ranking))
nm<-group_by(nm,Incoming)
summarise(nm,arank=mean(Ranking))
r
mm[,2]
r<-mm[,2]
r
r<-r[[1]]
r
as.numeric(r)
as.character(r)
r<pas.character(r)
r<-as.character(r)
as.numeric(r)
r<-as.numeric(r)
nm<-data.frame(Ranking=r,Incoming=mm$Income.Group)
nm<-group_by(nm,Incoming)
summarise(nm,arank=mean(Ranking))
nm[which(nm$Incoming=="Lower middle income"&nm$Ranking<=38)]
nm[which(nm$Incoming=="Lower middle income"&nm$Ranking<=38),]
set.seed(1234)
x<-rnormz(12,mean=rep(1:3,each=4),sd=0.2)
x<-rnorm(12,mean=rep(1:3,each=4),sd=0.2)
y<-rnorm(12,mean=rep(c(1,2,1),each=4),sd=0.2)
dataFrame<-data.frame(x=x,y=y)
set.seed(143)
dataMatrix<-as.matrix(dataFrame)[sample(1:12),]
heatmap(dataMatrix)
h<-heatmap(dataMatrix)
plot(h)
h<-hclust(dataMatrix)
dataMatrix
h<-heatmap(dataMatrix)
h
summary(h)
set.seed(12345)
par(mar=rep(0.2,4))
dataMatrix<-matrix(rnorm(400),nrow = 40)
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1
])
)
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
i<-image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
?t
matrix(c(1,2,3),c(4,5,6))
?"matrix"
m<-matrix(1:10,2,5)
m
t(m)
j
i
i<-image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
i
print(i)
plot(i)
?image
x <- y <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(x^2, y^2, "+"))
image(z = z <- cos(r^2)*exp(-r/6), col  = gray((0:32)/32))
require(grDevices) # for colours
x <- y <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(x^2, y^2, "+"))
image(z = z <- cos(r^2)*exp(-r/6), col  = gray((0:32)/32))
i<-image(z = z <- cos(r^2)*exp(-r/6), col  = gray((0:32)/32))
i
heatmap(dataMatrix)
heatmap(dataMatrix)
heatmap(dataMatrix)
?heatmap
require(graphics); require(grDevices)
heatmap(dataMatrix)
x  <- as.matrix(mtcars)
rc <- rainbow(nrow(x), start = 0, end = .3)
cc <- rainbow(ncol(x), start = 0, end = .3)
hv <- heatmap(x, col = cm.colors(256), scale = "column",
RowSideColors = rc, ColSideColors = cc, margins = c(5,10),
xlab = "specification variables", ylab =  "Car Models",
main = "heatmap(<Mtcars data>, ..., scale = \"column\")")
utils::str(hv) # the two re-ordering index vectors
## no column dendrogram (nor reordering) at all:
heatmap(x, Colv = NA, col = cm.colors(256), scale = "column",
RowSideColors = rc, margins = c(5,10),
xlab = "specification variables", ylab =  "Car Models",
main = "heatmap(<Mtcars data>, ..., scale = \"column\")")
heatmap(x, Rowv = NA, Colv = NA, scale = "column",
main = "heatmap(*, NA, NA) ~= image(t(x))")
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
x<-read.csv("american.csv")
x[which(x$ACR==3&x$AGS==6),]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile = "fff.jpg",method = "curl")
read.csv("fff.jpg")
library(jpeg)
f<-jpeg::readJPEG("fff.jpg")
f<-jpeg::readJPEG("fff.jpg",native = TRUE)
quantile(f,c(0.3,0.8))
ppois(1,15)
?ppois
ppois(15,1)
ppois(0,1)
shiny::runApp('lecture_video/Developing Data Products')
setwd("lecture_video/Developing Data Products/www/")
shiny::runApp('~/Desktop/coursera/lecture_video/Developing Data Products')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
